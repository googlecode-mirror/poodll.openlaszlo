<?xml version="1.0" encoding="UTF-8" ?>
<canvas >

	<include href="PoodLLAudioRecorderLib.lzx"/>
	
	<!-- The size of the buttons et al. -->
	<attribute name="iconsize" value="100" />
	
	<!-- The URL of the Red5 server -->
	<attribute name="red5url" value="lz.Browser.getInitArg('red5url')" />  	

	<!-- The filename of the streamed file (must be unique) -->
	<attribute name="filename" value="lz.Browser.getInitArg('filename')" />
	
	<!-- The saveforamt of the streamed file. Usually flv unless autotranscoding to MP4  -->
	<attribute name="saveformat" value="lz.Browser.getInitArg('saveformat')" />
	
	<!-- The id of the control on the enclosing HTMLpage to update with the  filename -->
	<attribute name="updatecontrol" value="lz.Browser.getInitArg('updatecontrol')" />

	<!-- UID for ensuring filenames  are unique-->
	<attribute name="uid" value="lz.Browser.getInitArg('uid')" />
	<attribute name="assigname" value="lz.Browser.getInitArg('assigName')" />

	<attribute name="course" value="lz.Browser.getInitArg('course')" />
	<!-- The course id (parent will pass -1 if there is no course id) -->
	
	<!-- Audio Settings -->
	<attribute name="gain" value="lz.Browser.getInitArg('gain')" />
	<attribute name="rate" value="lz.Browser.getInitArg('rate')"  />
	<attribute name="echosuppression" value="lz.Browser.getInitArg('echosuppression')" />
	<attribute name="loopback" value="lz.Browser.getInitArg('loopback')" />
	<attribute name="silencelevel" value="lz.Browser.getInitArg('silencelevel')" />
	<attribute name="prefdevice" value="lz.Browser.getInitArg('prefdevice')" />

	
	<!-- A flag to tell us if we should be overwriting files -->
	<attribute name="overwritefile" value="true"/>
	
	<!--Moodle 2 File system info -->
	<attribute name="poodllfilelib" value="lz.Browser.getInitArg('poodllfilelib')" />
	<attribute name="contextid" value="lz.Browser.getInitArg('contextid')" />
	<attribute name="component" value="lz.Browser.getInitArg('component')" />
	<attribute name="filearea" value="lz.Browser.getInitArg('filearea')" />
	<attribute name="itemid" value="lz.Browser.getInitArg('itemid')" />
	
	<!-- Time Limit info -->
	<attribute name="timelimit" value="lz.Browser.getInitArg('timelimit')" />


	<!-- Auto Try Ports -->
	<attribute name="autotryports" value="lz.Browser.getInitArg('autotryports')" />
	
	
    <simplelayout inset="10" axis="y" spacing="5"/>
	<poodllaudiorecorder 
		name="par"
		width="${parent.width}" 
		height="200"
		filename="${parent.filename}"
		saveformat="canvas.saveformat"
		updatecontrol="${parent.updatecontrol}"
		uid="${parent.uid}"
		assigname="${parent.assigname}"
		red5url="${parent.red5url}"
		course="${parent.course}"
		overwritefile="${parent.overwritefile}"	
		iconsize="${parent.iconsize}"	
		gain="$once{parent.gain ? Number(parent.gain) : 50}"
		silencelevel="$once{parent.silencelevel ? Number(parent.silencelevel) : 10}"		
		rate="$once{parent.rate ? Number(parent.rate) : 22}"
		echosuppression="$once{parent.echosuppression ? parent.echosuppression=='yes' : true}"	
		loopback="$once{parent.loopback ? parent.loopback=='yes' : false}"	
		prefdevice="$once{parent.prefdevice}"
		poodllfilelib="${canvas.poodllfilelib}"
		contextid="${canvas.contextid}"
		component="${canvas.component}"
		filearea="${canvas.filearea}"
		itemid="${canvas.itemid}"
		timelimit="$once{parent.timelimit ? Number(parent.timelimit) : 0}"
		autotryports="$once{parent.autotryports ? parent.autotryports=='yes' : false}"	
		/>
	 
	 	<view name="thespinner" id="thespinner" bgcolor="0xccffff" stretches="both" align="center" options="ignorelayout: true" x="${(parent.par.width - this.width) / 2}" y="${(parent.par.height - this.height) / 2}" visible="false" width="75" height="75">
			<simplelayout axis="y" spacing="3" />
 			<attribute name="caption" value="'processing'" />
			<view name="spindle" resource="spinner2.swf" stretches="both" align="center" width="60" height="60" />
			<text text="${parent.caption}" align="center"/>
			<method name="hidespinner" args="ignore=null">
				this.setAttribute("visible",false);
			</method>
			<method name="showspinner" args="ignore=null">
				this.bringToFront();
				this.setAttribute("visible",true);
			</method>
			<handler name="onclick">
				this.hidespinner();
			</handler>
		</view>
</canvas>
