<?xml version="1.0" encoding="UTF-8" ?>
<canvas>
 <goldstyle name="defaultstyle" isdefault="true"/>

	<include href="PoodLLVideoRecorderLib.lzx"/>
	<!-- include href="explorerservicelib.lzx" -->
	
	<!-- The URL of the Red5 server -->
	<attribute name="red5url" value="lz.Browser.getInitArg('red5url')" />  	

	<!-- The filename of the streamed file (must be unique) -->
	<attribute name="filename" value="lz.Browser.getInitArg('filename')" />
	
	<!-- The id of the control on the enclosing HTMLpage to update with the  filename -->
	<attribute name="updatecontrol" value="lz.Browser.getInitArg('updatecontrol')" />

	<!-- To set a particular camera as default -->
	<attribute name="prefcam" value="lz.Browser.getInitArg('prefcam')" />
	<attribute name="prefmic" value="lz.Browser.getInitArg('prefmic')" />

	<!-- UID for ensuring filenames  are unique-->
	<attribute name="uid" value="lz.Browser.getInitArg('uid')" />
	<attribute name="assigName" value="lz.Browser.getInitArg('assigName')" />

	<!-- The course id (parent will pass -1 if there is no course id) -->
	<attribute name="course" value="lz.Browser.getInitArg('course')" />

	<!-- Some camera settings-->
	<attribute name="capturewidth" value="lz.Browser.getInitArg('capturewidth')" />
	<attribute name="captureheight" value="lz.Browser.getInitArg('captureheight')" />
	<attribute name="bandwidth" value="lz.Browser.getInitArg('bandwidth')" />
	<attribute name="picqual" value="lz.Browser.getInitArg('picqual')" />
	<attribute name="capturefps" value="lz.Browser.getInitArg('capturefps')"  />
	<!-- Overwritefile or generate random filename, depends on server-->
	<attribute name="overwritefile" value="lz.Browser.getInitArg('overwritefile')" />
	
		<!-- Audio Settings -->
	<attribute name="gain" value="lz.Browser.getInitArg('gain')" />
	<attribute name="rate" value="lz.Browser.getInitArg('rate')"  />
	<attribute name="echosuppression" value="lz.Browser.getInitArg('echosuppression')" />
	<attribute name="loopback" value="lz.Browser.getInitArg('loopback')" />
	<attribute name="silencelevel" value="lz.Browser.getInitArg('silencelevel')" />
	
	<!--Moodle 2 File system info -->
	<attribute name="poodllfilelib" value="lz.Browser.getInitArg('poodllfilelib')" />
	<attribute name="contextid" value="lz.Browser.getInitArg('contextid')" />
	<attribute name="component" value="lz.Browser.getInitArg('component')" />
	<attribute name="filearea" value="lz.Browser.getInitArg('filearea')" />
	<attribute name="itemid" value="lz.Browser.getInitArg('itemid')" />
	
	
	<poodllvideorecorder name="recorder" 
			red5url="${canvas.red5url}" 
			overwritefile="${canvas.overwritefile}" 
			filename="${canvas.filename}" 
			course="${canvas.course}" 
			updatecontrol="canvas.updatecontrol" 
			prefcam="canvas.prefcam"
			prefmic="canvas.prefmic"
			uid="canvas.uid"
			assigName="canvas.assigName"
			capturewidth="canvas.capturewidth"
			captureheight="canvas.captureheight"
			bandwidth="canvas.bandwidth"
			picqual="canvas.picqual"
			capturefps="canvas.capturefps"
			gain="$once{parent.gain ? Number(parent.gain) : 50}"
			silencelevel="$once{parent.silencelevel ? Number(parent.silencelevel) : 10}"		
			rate="$once{parent.rate ? Number(parent.rate) : 22}"
			echosuppression="$once{parent.echosuppression ? parent.echosuppression=='yes' : true}"	
			loopback="$once{parent.loopback ? parent.loopback=='yes' : false}"	
			poodllfilelib="${canvas.poodllfilelib}"
			contextid="${canvas.contextid}"
			component="${canvas.component}"
			filearea="${canvas.filearea}"
			itemid="${canvas.itemid}"
			width="${parent.width}" 
			height="${parent.height}" />
			
			
		<view name="thespinner" id="thespinner" resource="spinner2.swf" stretches="both" align="center" options="ignorelayout: true" visible="false" width="$once{0.8*(Math.min(canvas.height,canvas.width))}" height="$once{0.8*(Math.min(canvas.height,canvas.width))}">
			<method name="hidespinner" args="ignore=null">
				this.setAttribute("visible",false);
			</method>
			<method name="showspinner" args="ignore=null">
				this.bringToFront();
				this.setAttribute("visible",true);
			</method>
			<handler name="onclick">
				this.hidespinner();
			</handler>
		</view>
</canvas>