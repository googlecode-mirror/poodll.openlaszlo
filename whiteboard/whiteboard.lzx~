<canvas height="500" width="100%" debug="false">
<debug y="300"/>
<drawview width="600" height="400" bgcolor="red" clickable="true" cachebitmap="true">
<attribute name="mx" type="number" value="0"/>
<attribute name="my" type="number" value="0"/>
<attribute name="prevx" type="number" value="0"/>
<attribute name="prevy" type="number" value="0"/>
<attribute name="pointsArray" value="null"/>
<attribute name="moustracker_del" value="$once{ new LzDelegate( this, 'trackmouse' )}"/>

<attribute name="mouseupdown" value="null"/>

<text name="display"/>
<attribute name="counter" value="0"/>

<handler name="onidle" reference="LzIdleService.LzIdle">
display.format("Received %d idle events", ++counter);
</handler>

<handler name="onmousedown">
//this.pointsArray = new Array();
moustracker_del.register(lz.GlobalMouse,'onmousemove');
//moustracker_del.register(lz.Idle,'onidle');
//if($debug) Debug.write("%s %d %d", "mousex, mousey:", this.getMouse('x'),this.getMouse('y'));
</handler>

<handler name="onmouseup">
<![CDATA[
moustracker_del.unregisterAll();

this.prevx = 0;
this.prevy = 0;
//for (var eg=0;eg<this.pointsArray.length;eg++) {
// this.drawline(this.pointsArray[eg][1],this.pointsArray[eg][2],this.pointsArray[eg][3],this.pointsArray[eg][4]);
//}
//this.stroke();
//this.pointsArray = null;
//if($debug) Debug.write("%s %d %d", "mousex, mousey:", this.getMouse('x'),this.getMouse('y'));
]]>
</handler>

<method name="trackmouse" args="v">

this.mx = this.getMouse('x');
this.my = this.getMouse('y');

//if($debug) Debug.write("%s %d %d", "mousex, mousey:", this.mx,this.my);

if (this.mx != this.prevx || this.my != this.prevy) {
if (this.prevx == 0) {
this.prevx = this.mx;
}
if (this.prevy == 0) {
this.prevy = this.my;
}
var px = this.prevx;
var py = this.prevy;

this.drawline(px, py, this.mx, this.my);
//this.drawlineRegisterPaint(px,py,this.mx,this.my);

this.prevx = this.mx;
this.prevy = this.my;
}
</method>

<method name="drawline" args="x1,y1,x2,y2">
<![CDATA[
this.beginPath();
this.moveTo(x1,y1);
this.lineTo(x2,y2);
//this.closePath();
this.stroke();
]]>
</method>
<method name="drawlineRegisterPaint" args="x1,y1,x2,y2">
var actionObject = new Array();
actionObject[0] = 'point';
actionObject[1] = x1;
actionObject[2] = y1;
actionObject[3] = x2;
actionObject[4] = y2;
this.pointsArray.push(actionObject);
</method>
</drawview>
</canvas>